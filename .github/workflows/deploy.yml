name: deploy
on: deployment_status
jobs:
  tests-after-deploy:
    # only runs this job on successful deploy
    # https://glebbahmutov.com/blog/develop-preview-test/
    if: github.event.deployment_status.state == 'success'
    runs-on: ubuntu-20.04
    # Use a Docker image with Cypress installed globally
    # https://github.com/cypress-io/github-action#docker-image
    # https://github.com/cypress-io/cypress-docker-images
    container: cypress/included:8.3.1
    steps:
      # see if there is GITHUB_REF
      - name: Check GITHUB_REF
        run: |
          echo "GITHUB_REF is ${GITHUB_REF}"
      # to compute the branch name for the deployed commit
      # need to grab the repo
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Notice that we do not install any dependencies in this job
      # Our Cypress tests do not use any plugins, so we just
      # need to invoke the global Cypress from the Docker image

      - name: Run tests
        run: |
          echo "Vercel unique deployment URL is ${{ github.event.deployment_status.target_url }}"

          echo "Deployed commit ${{ github.sha }}"
          export BRANCH_NAME=$(git show -s --pretty=%D HEAD | tr -s ',' '\n' | sed 's/^ //' | grep -e 'origin/' | head -1 | sed 's/\origin\///g')
          echo "Deployed branch ${BRANCH_NAME}"

          # show the info about the browsers
          # already installed in the Docker image
          cypress info

          # first try to run some tests by name multiple times
          # using the plugin https://github.com/cypress-io/cypress-grep
          cypress run --env grep=works,burn=5 \
            --config baseUrl=${{ github.event.deployment_status.target_url }}

          # then run all the tests
          cypress run --config baseUrl=${{ github.event.deployment_status.target_url }}
